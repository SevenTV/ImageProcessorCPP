on:
  push:
    branches:
      - master
      - dev
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-lint-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.1

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - uses: actions/setup-python@v3
        with:
          python-version: "3.8.10"

      - name: Checkout code
        uses: actions/checkout@v3

      - id: cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
          echo "::set-output name=python-pip::$(python3 -m pip cache dir)"

      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('go/go.sum') }}

      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('go/go.sum') }}

      - name: Python Pip Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-paths.outputs.python-pip }}
          key: ${{ runner.os }}-python-pip-${{ hashFiles('cpp/requirements.txt') }}

      - name: Node Modules Cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}

      - name: install dev_deps
        run: make dev_deps

      - name: Run Lint
        run: make lint

  changes:
    name: Code Changes
    runs-on: ubuntu-latest
    outputs:
      third-party: ${{ steps.changes.outputs.third-party }}
      cpp: ${{ steps.changes.outputs.cpp }}
      go: ${{ steps.changes.outputs.go }}
      go-deps: ${{ steps.changes.outputs.go-deps }}
      tests: ${{ steps.changes.outputs.tests }}
      final: ${{ steps.changes.outputs.final }}
    concurrency:
      group: ${{ github.workflow }}-chnages-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          head: ${{ github.ref }}
          filters: |
            third-party:
              - 'cpp/third-party/**'
            cpp:
              - 'cpp/**'
            go:
              - 'go/**'
            go-deps:
              - 'go/go.sum'
              - 'go/go.mod'
            tests:
              - 'assets/**'
              - 'cpp/**'
              - 'go/**'
            final:
              - 'go/**'
              - 'cpp/**'

  deps-builder:
    name: Deps Builder
    runs-on: self-hosted
    needs:
      - changes
    if: ${{ needs.changes.outputs.third-party == 'true' }}
    concurrency:
      group: ${{ github.workflow }}-deps-builder-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - id: buildx-context
        run: |
          docker context create builders

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
          endpoint: builders

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ./.cache/deps-builder
          key: ${{ runner.os }}-deps-builder-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-deps-builder-buildx-

      - name: Build the cache
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          cache-from: |
            type=local,src=./.cache/deps-builder
          cache-to: type=local,dest=./.cache/deps-builder-new,mode=max
          target: deps-builder

      - name: Move cache
        run: |
          rm -rf ./.cache/deps-builder
          mv ./.cache/deps-builder-new ./.cache/deps-builder

  deps:
    name: Deps
    runs-on: ubuntu-latest
    needs:
      - changes
      - deps-builder
    if: ${{ needs.changes.outputs.third-party == 'true' }}
    concurrency:
      group: ${{ github.workflow }}-deps-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - id: buildx-context
        run: |
          docker context create builders

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
          endpoint: builders

      - name: Cache Docker layers (deps-builder)
        uses: actions/cache@v3
        with:
          path: ./.cache/deps-builder
          key: ${{ runner.os }}-deps-builder-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-deps-builder-buildx-

      - name: Cache Docker layers (deps)
        uses: actions/cache@v3
        with:
          path: ./.cache/deps
          key: ${{ runner.os }}-deps-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-deps-buildx-

      - name: Build the cache
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          cache-from: |
            type=local,src=./.cache/deps
            type=local,src=./.cache/deps-builder
          cache-to: |
            type=local,dest=./.cache/deps-new,mode=max
          target: deps

      - name: Move cache
        run: |
          rm -rf ./.cache/deps
          mv ./.cache/deps-new ./.cache/deps

  cpp-builder:
    name: Cpp Builder
    runs-on: ubuntu-latest
    needs:
      - changes
      - deps
    if: ${{ needs.changes.outputs.cpp == 'true' }}
    concurrency:
      group: ${{ github.workflow }}-cpp-builder-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - id: buildx-context
        run: |
          docker context create builders

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
          endpoint: builders

      - name: Cache Docker layers (deps)
        uses: actions/cache@v3
        with:
          path: ./.cache/deps
          key: ${{ runner.os }}-deps-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-deps-buildx-

      - name: Cache Docker layers (cpp-builder)
        uses: actions/cache@v3
        with:
          path: ./.cache/cpp-builder
          key: ${{ runner.os }}-cpp-builder-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cpp-builder-buildx-

      - name: Build the cache
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          cache-from: |
            type=local,src=./.cache/cpp-builder
            type=local,src=./.cache/deps
          cache-to: |
            type=local,dest=./.cache/cpp-builder-new,mode=max
          target: cpp-builder

      - name: Move cache
        run: |
          rm -rf ./.cache/cpp-builder
          mv ./.cache/cpp-builder-new ./.cache/cpp-builder

  go-deps:
    name: Go Deps
    runs-on: ubuntu-latest
    needs:
      - changes
    if: ${{ needs.changes.outputs.go-deps == 'true' }}
    concurrency:
      group: ${{ github.workflow }}-go-deps-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - id: buildx-context
        run: |
          docker context create builders

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
          endpoint: builders

      - name: Cache Docker layers (go-deps)
        uses: actions/cache@v3
        with:
          path: ./.cache/go-deps
          key: ${{ runner.os }}-go-deps-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-deps-buildx-

      - name: Build the cache
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          cache-from: |
            type=local,src=./.cache/go-deps
          cache-to: |
            type=local,dest=./.cache/go-deps-new,mode=max
          target: go-deps

      - name: Move cache
        run: |
          rm -rf ./.cache/go-deps
          mv ./.cache/go-deps-new ./.cache/go-deps

  go-builder:
    name: Go Builder
    runs-on: ubuntu-latest
    needs:
      - changes
      - go-deps
    if: ${{ needs.changes.outputs.go == 'true' }}
    concurrency:
      group: ${{ github.workflow }}-go-builder-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - id: buildx-context
        run: |
          docker context create builders

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
          endpoint: builders

      - name: Cache Docker layers (go-deps)
        uses: actions/cache@v3
        with:
          path: ./.cache/go-deps
          key: ${{ runner.os }}-go-deps-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-deps-buildx-

      - name: Cache Docker layers (go-builder)
        uses: actions/cache@v3
        with:
          path: ./.cache/go-builder
          key: ${{ runner.os }}-go-builder-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-builder-buildx-

      - name: Build the cache
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          cache-from: |
            type=local,src=./.cache/go-builder
            type=local,src=./.cache/go-deps
          cache-to: |
            type=local,dest=./.cache/go-builder-new,mode=max
          target: go-builder

      - name: Move cache
        run: |
          rm -rf ./.cache/go-builder
          mv ./.cache/go-builder-new ./.cache/go-builder

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs:
      - changes
      - cpp-builder
      - go-deps
    if: ${{ needs.changes.outputs.tests == 'true' }}
    concurrency:
      group: ${{ github.workflow }}-tests-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - id: buildx-context
        run: |
          docker context create builders

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
          endpoint: builders

      - name: Cache Docker layers (go-deps)
        uses: actions/cache@v3
        with:
          path: ./.cache/go-deps
          key: ${{ runner.os }}-go-deps-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-deps-buildx-

      - name: Cache Docker layers (cpp-builder)
        uses: actions/cache@v3
        with:
          path: ./.cache/cpp-builder
          key: ${{ runner.os }}-cpp-builder-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cpp-builder-buildx-

      - name: Cache Docker layers (tests)
        uses: actions/cache@v3
        with:
          path: ./.cache/tests
          key: ${{ runner.os }}-tests-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-tests-buildx-

      - name: Build the cache
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          cache-from: |
            type=local,src=./.cache/tests
            type=local,src=./.cache/cpp-builder
            type=local,src=./.cache/go-deps
          cache-to: |
            type=local,dest=./.cache/tests-new,mode=max
          target: tests

      - name: Move cache
        run: |
          rm -rf ./.cache/tests
          mv ./.cache/tests-new ./.cache/tests

  final:
    name: Final
    runs-on: ubuntu-latest
    needs:
      - go-builder
      - cpp-builder
      - tests
      - lint
      - changes
    concurrency:
      group: ${{ github.workflow }}-final-${{ github.ref }}
      cancel-in-progress: true

    if: ${{ needs.changes.outputs.final == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - id: buildx-context
        run: |
          docker context create builders

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
          endpoint: builders

      - name: Cache Docker layers (cpp-builder)
        uses: actions/cache@v3
        with:
          path: ./.cache/cpp-builder
          key: ${{ runner.os }}-cpp-builder-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cpp-builder-buildx-

      - name: Cache Docker layers (go-builder)
        uses: actions/cache@v3
        with:
          path: ./.cache/go-builder
          key: ${{ runner.os }}-go-builder-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-builder-buildx-

      - name: Cache Docker layers (final)
        uses: actions/cache@v3
        with:
          path: ./.cache/final
          key: ${{ runner.os }}-final-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-final-buildx-

      - name: Build the cache
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          cache-from: |
            type=local,src=./.cache/final
            type=local,src=./.cache/go-builder
            type=local,src=./.cache/cpp-builder
          cache-to: |
            type=local,dest=./.cache/final-new,mode=max
          target: final

      - name: Move cache
        run: |
          rm -rf ./.cache/final
          mv ./.cache/final-new ./.cache/final
